<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Tengine配置防百度爬虫]]></title>
    <url>%2F2019%2F09%2F03%2FAnti-reptile%2F</url>
    <content type="text"><![CDATA[发现此xxx.xxxx.cn一直被下面这个ua爬取:Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html) tengine配置if判断ua，挡掉这个爬虫 1.配置confvim xxx.xxxx.cn #添加以下配置 if ($http_user_agent ~ &quot;Mozilla/5.0\ \(compatible;\ Baiduspider/2.0;\ \+http://www.baidu.com/search/spider.html&quot;) { return 403; } if ($http_user_agent ~* ^Baiduspider) { return 403; } 2.测试nginx -t 和 nginx -s reload 3.额外补充方法：3.1 新建user-agent_deny.conf配置文件#禁止Scrapy等工具的抓取 if ($http_user_agent ~* (Scrapy|Curl|HttpClient)) { return 403; } #禁止指定UA及UA为空的访问 if ($http_user_agent ~* &quot;FeedDemon|Indy Library|YandexBot|Alexa Toolbar|AskTbFXTV|AhrefsBot|CrawlDaddy|CoolpadWebkit|Java|Feedly|UniversalFeedParser|ApacheBench|Microsoft URL Control|Swiftbot|ZmEu|oBot|jaunty|Python-urllib|lightDeckReports Bot|YYSpider|DigExt|HttpClient|MJ12bot|heritrix|EasouSpider|Ezooms|^$&quot; ) { return 403; } #禁止非GET|HEAD|POST方式的抓取 if ($request_method !~ ^(GET|HEAD|POST)$) { return 403; } #然后直接reload即可 3.2 添加default_server; server { listen 81 default_server; server_name _; return 403; } default_server：nginx的虚拟主机是通过HTTP请求中的Host值来找到对应的虚拟主机配置 对于未绑定的域名指向你的服务器时，匹配不到你配置的虚拟主机域名后，会默认使用这个虚拟主机，然后直接返回403（状态码，可以自己定义，且返回内容可以通过error_page、echo或是lua等等）]]></content>
      <categories>
        <category>tengine</category>
      </categories>
      <tags>
        <tag>tengine</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Cisco switch配置管理]]></title>
    <url>%2F2019%2F07%2F25%2Fcisco-switch%2F</url>
    <content type="text"><![CDATA[一、准备1.1 准备工具当拿到一台新的思科交换机，开始动手配置，目标实现远程登陆和管理 硬件：笔记本、Console配置线、交换机Cisco3560一台 软件：SecureCRT 1.2 连接交换机首先在“计算机”----“管理”----“设备管理器”中查看com口的编号(本例为com3口) 然后打开SecureCRT软件，添加连接： 协议：Serial 端口：com3 波特率：9600成功连接之后开始进行配置 二、交换机配置管理2.1、配置登录用户、密码及SSH连接Switch#configure terminal //进入配置模式 Switch(config)# ip domain-name loverbook.com //在生成加密密码时需要用到用户名和域名 Switch(config)#crypto key generate rsa //生成加密密钥 The name for the keys will be: Switch.loverbook.com Choose the size of the key modulus in the range of 360 to 2048 for your General Purpose Keys. Choosing a key modulus greater than 512 may takea few minutes. How many bits in the modulus [512]: 1024 //生成一个rsa算法的密钥，密钥为1024位 % Generating 1024 bit RSA keys, keys will be non-exportable...[OK] Switch(config)#line vty 0 15 //进入vty模式 Switch(config-line)#transport input none //取消任何登录方式 Switch(config-line)#transport input ssh //只允许ssh登录 Switch(config-line)#exit //退出vty Switch(config)#aaa new-mode //开启AAA认证 Switch(config)#aaa authentication login default local //本地认证 Switch(config)# username admin privilege 15 password admin //创建一个用户和密码 Switch(config)#ip ssh version 2 //启用ssh版本号 Switch#sh ip ssh //查看自己配置的ssh SSH Enabled - version 2.0 Authentication timeout: 120 secs; Authentication retries: 3 2.2 为交换机配置远程管理IP地址：BOOK#conf t BOOK(config)#int vlan 1 //进入默认vlan 1（把交换机第一口划到vlan1中，连接上层设备） BOOK(config-if)#ip address 192.168.1.1 255.255.255.0 //配置管理地址，即可在客户端用新建的用户及密码SSH登录 2.3 配置交换机名字及enable用户模式密码Switch#configure terminal Switch(config)#hostname BOOK //配置交换机名称 BOOK(config)#enable secret BOOK //配置用户模式密码 Switch(config)#service password-encryption //对所有设置的密码进行加密，可以不配置 2.4 端口及vlan的配置管理 常用show int status查看端口状态:connected、disable、notconnect三种状态 创建和删除vlan （以实际办公网段为准） BOOK#conf t BOOK(config)#vlan 12 //创建12网段 BOOK(config-vlan)#no shutdown //默认创建好就是开启的，这步可以省略 BOOK(config)# no vlan 12 //删除12网段 端口配置 BOOK#conf t BOOK(config)#int fa0/2 //进入端口2 BOOK(config-if)#switchport mode access //把端口设置为access普通端口 BOOK(config-if)#shutdown //端口关闭 BOOK(config-if)#no shutdown //端口打开 BOOK(config-if)#switchport access vlan 12 //把2端口加入12网段 2.5. 开启三层路由及静态路由配置防火墙内网口地址：192.168.1.2 &amp; 交换机默认vlan1管理地址：192.168.1.1 BOOK#conf t BOOK(config)#ip routing //开启三层路由，开启后所有网段互通 BOOK(config)#no ip routing //关闭三层路由 BOOK(config)#ip route 0.0.0.0 0.0.0.0 192.168.1.2 //指向上一层防火墙内网口地址 备注：然后新加的12网段，需要在防火墙上添加一个返程路由即可 Cisco防火墙配置路由 BOOK-office# conf t BOOK-office(config)# route inside 192.168.12.0 255.255.255.0 192.168.1.1 三、实战演练3.1 新增部署网段的步骤BOOK#conf t BOOK(config)#vlan 13 //创建vlan 13 BOOK(config-vlan)#exit //退出到配置模式 BOOK(config)#int vlan 13 // 进入vlan 13 BOOK(config-if)#ip address 192.168.13.1 255.255.255.0 //配置99网段的网关地址 BOOK(config-if)#description bangong-vlan13 //可以对vlan13进行描述，方便后期管理 BOOK(config-if)#exit //退出到配置模式 BOOK(config)#ip dhcp pool 13 //创建99网段的地址池 BOOK(dhcp-config)# network 192.168.13.0 255.255.255.0 //配置网段 BOOK(dhcp-config)# default-router 192.168.13.1 //指定网段的网关 BOOK(dhcp-config)# dns-server 8.8.8.8 202.96.209.5 //配置网段的主和辅DNS BOOK(dhcp-config)# lease 2 //IP地址的租约时间为2天，超过两天没用就会释放 BOOK(config-if)#exit //退出到配置模式 BOOK(config)#ip dhcp excluded-address 192.168.13.1 192.168.13.20 //排除掉的IP地址不分配 BOOK(config)#int range fa0/2 -24 //对2到24端口全局配置 BOOK(config-if-range)#switchport access vlan 13 //全部加入到13网段 3.2 IP和MAC地址绑定 需求：张三想把IP地址192.168.12.80和507b.9dbe.55ea绑定，让客户端只有连接上网络，就会分配这个IP地址，如果更改其它IP则无法上网 思路：首先 12网段的地址池已经有了，客户端如果想获取特定的ip地址，必须先把这个地址从12网段里排除掉，让这个地址不会分配，然后建立一个自己的99网段地址池 步骤如下： BOOK(config)#ip dhcp excluded-address 192.168.12.80 //先把这个IP地址排除不分配 BOOK(config)#ip dhcp pool 12_zhangsan //建立一个张三自己的地址池，名字不能和已有的pool_12重复 BOOK(dhcp-config)# host 192.168.12.80 255.255.255.0 //指定张三的ip地址 BOOK(dhcp-config)# client-identifier 0150.7b9d.be55.ea // MAC地址格式为01xx.xxxx.xxxx.xx BOOK(dhcp-config)# dns-server 8.8.8.8 202.96.209.5 //指定DNS BOOK(dhcp-config)# default-router 192.168.12.1 // 指定网关 BOOK(config)#arp 192.168.12.80 7b.9dbe.55ea ARPA //绑定生效 客户端网卡禁用启用： 3.3 网段访问控制列表 需求：要求办公12网段和财务网段33隔离开，只允许特定的主机可以访问33网段，其它拒绝掉 BOOK# conf t BOOK(config)#ip access-list extended 100 //做一个访问控制列表，编号100 BOOK(config-ext-nacl)#permit ip host 192.168.12.80 any //允许张三这台机器可以访问任何网段 BOOK(config-ext-nacl)#permit ip host 192.168.12.80 host 192.168.33.8 //允许张三访问88.8主机 BOOK(config-ext-nacl)#deny ip any 192.168.22.0 0.0.0.255 //拒绝12网段访问33网段 BOOK(config-ext-nacl)#permit ip any any //允许所有，这条必须加上，否则未放行的无法上网 BOOK(config-ext-nacl)#exit //退出到配置模式 BOOK(config)#int vlan 12 //进入12网段下 BOOK(config-if)#ip access-group 100 in //应用访问控制列表 3.4 常用基本维护命令Show int status 查看端口状态 Show run 查看配置 Show ip dhcp pool 查看全部地址池的使用情况 Show ip dhcp pool vlan 12 只查看12网段的地址池 Show ip dhcp binding 查看租约信息 Show ip dhcp conflict 查看地址冲突信息 Show ip dhcp server statistics 查看DHCP收发数据包统计表 Show ip arp 192.168.12.xx 根据ip地址追踪mac地址 Show mac address-table address 7b.9dbe.55ea根据mac追踪具体端口位置 如果出现网络地址受限，获取不到IP地址，看看是不是地址池满了，重新释放刷新地址池 清除命令： Clear ip dhcp server statist 清除收发数据统计信息 clear ip dhcp binding * 清除所有租约信息 clear mac address-table dynamic 清除动态MAC地址列表 clear arp-cache 清除arp缓存]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Cisco asa防火墙配置管理]]></title>
    <url>%2F2019%2F07%2F22%2Fcisco-asa%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Openvpn服务器搭建]]></title>
    <url>%2F2019%2F05%2F20%2FOpenvpnserver%2F</url>
    <content type="text"><![CDATA[一、前言OpenVPN 是一个基于 OpenSSL 库的应用层 VPN 实现，和传统 VPN 相比，它的优点是简单易用、安全稳定。此次基于centos7.3系统编译安装，使用udp协议自定义端口，搭建的目的是为了能实现通过证书+账户密码双重认证的方法，登录到阿里云VPC内部，对服务器进行配置管理。 准备工具 Easy-rsa.zip //秘钥制作工具 Lzo-2.0.6.tar.gz //依赖包 Openvpn-2.3.3.tar.gz //安装包 网段 openvpn主机ip : 172.xx.xx.xx 外网ip: 100.100.100.100 vpn网段：20.8.8.0 二、安装Openvpn2.1 安装依赖包pam-devel是安装openvpn必要的依赖包 [root@test ~]# yum -y install unzip ntpdate pam-devel openssl openssl-devel 2.2 上传包文件通过ssh连接上openvpn服务器，把3个文件拷贝到/usr/local/目录下，并分别解压 [root@test local]# unzip easy-rsa.zip #asy-rsa证书制作工具 [root@test local]# tar -zxvf lzo-2.06.tar.gz #lzo-2.0.6.tar.gz依赖包 [root@test local]# tar -zxvf openvpn-2.3.3.tar.gz 2.3 创建安装目录[root@test local]# mkdir -p /usr/local/openvpn/conf #于存放配置文件 [root@test local]# mkdir –p /usr/local/openvpn/log #于存放日志文件 [root@test local]# mkdir -p /usr/local/openvpn/easy-rsa #密钥生成工具及密钥 2.4 开始安装openvpn进入/usr/local/目录下: [root@test local]# cd lzo-2.06 [root@test lzo-2.06]# ./configure --prefix=/usr #装依赖库 [root@test lzo-2.06]#make &amp;&amp; make install [root@test lzo-2.06]# /sbin/ldconfig #置运行时动态链接库 [root@test local]# cd openvpn-2.3.3 [root@test openvpn-2.3.3]# ./configure --prefix=/usr/local/openvpn/ [root@test openvpn-2.3.3]# make &amp;&amp; make install [root@testopenvpn-2.3.3]#cd sample/sample-config-files/ [root@test sample-config-files]# cp server.conf /usr/local/openvpn/conf/ #贝配置文件 [root@test local]# cd easy-rsa/2.0/ [root@test 2.0]# cp -rf * /usr/local/openvpn/easy-rsa/ [root@test 2.0]# cd /usr/local/openvpn/easy-rsa/ [root@test easy-rsa]# chmod +x * 三、配置openvpn3.1 配置Vars文件及生成服务端证书[root@test ~]# cd /usr/local/openvpn/easy-rsa/ [root@test easy-rsa]# vim vars #配置vars文件（证书的默认配置） export KEY_SIZE=2048 #加密位数，太大增加CPU负载 export CA_EXPIRE=3650 #证书有效期，这里是10年 export KEY_EXPIRE=365 #秘钥有效期 export KEY_COUNTRY=&quot;CN&quot; #国家 export KEY_PROVINCE=&quot;SH&quot; #省份 export KEY_CITY=&quot;Shanghai&quot; #所在城市 export KEY_ORG=&quot;yunwei&quot; # 组织单位 export KEY_EMAIL=&quot;yunwei@book.cn&quot; #邮箱地址 export KEY_OU=&quot;Yunwei&quot; #组织容器可以随便填写 export KEY_NAME=&quot;VPNServer&quot; #名称可以随便填写 [root@test easy-rsa]# source vars #使配置生效 下面开始制作根证书CA: [root@test easy-rsa]# ./clean-all #初始化 [root@test easy-rsa]# ./build-ca #创建根证书，一路回车 Generating a 2048 bit RSA private key ..................................+++ ...............................+++ writing new private key to &#39;ca.key&#39; ----- You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter &#39;.&#39;, the field will be left blank. ----- Country Name (2 letter code) [CN]: State or Province Name (full name) [SH]: Locality Name (eg, city) [Shanghai]: Organization Name (eg, company) [yunwei]: Organizational Unit Name (eg, section) [Yunwei]: Common Name (eg, your name or your server&#39;s hostname) [yunwei CA]: Name [EasyServer]: Email Address [yunwei@book.cn]: 创建服务器端证书server和秘钥: [root@test easy-rsa]# ./build-key-server server #一路回车默认，最后输入y确认 Generating a 2048 bit RSA private key ...........+++ ....+++ writing new private key to &#39;server.key&#39; ----- You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter &#39;.&#39;, the field will be left blank. ----- Country Name (2 letter code) [CN]: State or Province Name (full name) [SH]: Locality Name (eg, city) [Shanghai]: Organization Name (eg, company) [yunwei]: Organizational Unit Name (eg, section) [Yunwei]: Common Name (eg, your name or your server&#39;s hostname) [server]: Name [EasyServer]: Email Address [yunwei@book.cn]: Please enter the following &#39;extra&#39; attributes to be sent with your certificate request A challenge password []: An optional company name []: Using configuration from /usr/local/openvpn/easy-rsa/openssl-1.0.0.cnf Check that the request matches the signature Signature ok The Subject&#39;s Distinguished Name is as follows countryName :PRINTABLE:&#39;CN&#39; stateOrProvinceName :PRINTABLE:&#39;SH&#39; localityName :PRINTABLE:&#39;Shanghai&#39; organizationName :PRINTABLE:&#39;yunwei&#39; organizationalUnitName:PRINTABLE:&#39;Yunwei&#39; commonName :PRINTABLE:&#39;server&#39; name :PRINTABLE:&#39;EasyServer&#39; emailAddress :IA5STRING:&#39;yunwei@book.cn&#39; Certificate is to be certified until Apr 15 15:35:32 2019 GMT (365 days) Sign the certificate? [y/n]:y #输入y 1 out of 1 certificate requests certified, commit? [y/n] y #输入y Write out database with 1 new entries [root@test easy-rsa]# ./build-dh #创建dh2048加密协商文件 [root@test easy-rsa]# [root@testeasy-rsa]#../sbin/openvpn --genkey --secret /usr/local/openvpn/easy-rsa/keys/ta.key #生成防Dos攻击的文件 3.2 配置openvpn server文件[root@test ~]# vim /usr/local/openvpn/conf/server.conf Local 172.xx.xx.xx #本机监听地址 port 2294 #自定义端口号 proto udp #使用udp协议 dev tun #tun是ip层的点对点协议,建议使用tun #证书若没放在conf下，需要指定路径 ca /usr/local/openvpn/easy-rsa/keys/ca.crt cert /usr/local/openvpn/easy-rsa/keys/server.crt key /usr/local/openvpn/easy-rsa/keys/server.key # This file should be kept secret dh /usr/local/openvpn/easy-rsa/keys/dh2048.pem server 20.8.8.0 255.255.255.0 #服务器vpn网段地址 #防止openvpn重新启动后“忘记”Client曾经使用过的IP地址 ifconfig-pool-persist /usr/local/openvpn/log/ipp.txt #通过VPN Server往Client push路由，client通过pull指令获得 push &quot;route 20.8.8.0 255.255.255.0&quot; push &quot;route 172.xx.xx.0 255.255.255.0&quot; push &quot;dhcp-option DNS 223.5.5.5&quot; #指定DNS地址 push &quot;dhcp-option DNS 8.8.8.8&quot; client-to-client #和keys连接VPN，一定要打开这个选项，否则只允许一个人连接VPN duplicate-cn keepalive 10 120 comp-lzo #对数据进行压缩 max-clients 10 #支持客户端数 通过keepalive检测超时后，重新启动VPN，不重新读取keys，保留第一次使用的keys persist-key #通过keepalive检测超时后，重新启动VPN，一直保持tun或者tap设备是linkup的，否则网络连接会先linkdown然后linkup persist-tun status /usr/local/openvpn/log/openvpn-status.log #日志路径 log-append /usr/local/openvpn/log/openvpn.log verb 3 四、用户密码+证书验证配置4.1 创建客户端用户[root@test ~]# cd /usr/local/openvpn/easy-rsa/ [root@test easy-rsa]# ./build-key book #创建用户book，方法同server端备注：执行后会在keys文件夹下，生成3个文件，book.crt、book.csr（mac电脑不需要这个文件）、book.key，另外加上同目录下的ca.crt、ca.key、ta.key和dh2048.pem这7个文件一起打包，即是客户端所需要的所有文件，添加其它用户也是同样的方法 4.2 配置账户密码验证[root@test ~]# vi /usr/local/openvpn/conf/server.conf #配置文件中加上以下几行 tls-auth /usr/local/openvpn/easy-rsa/keys/ta.key 0 #server端是0 ,客户端为1 auth-user-pass-verify /usr/local/openvpn/easy-rsa/checkpsw.sh via-env #密码验证的脚本文件放在此目录下，稍后创建脚本 script-security 3 username-as-common-name ;client-cert-not-required #如果只想账户密码验证，就开启这句创建脚本文件：checkpsw.sh #!/bin/sh ########################################################### # checkpsw.sh (C) 2004 Mathias Sundman &lt;mathias@openvpn.se&gt; # # This script will authenticate OpenVPN users against # a plain text file. The passfile should simply contain # one row per user with the username first followed by # one or more space(s) or tab(s) and then the password. PASSFILE=&quot;/usr/local/openvpn/easy-rsa/psw-file&quot; //指定保存账户和密码的文件 LOG_FILE=&quot;/usr/local/openvpn/log/openvpn-password.log&quot;//保存日志文件 TIME_STAMP=`date &quot;+%Y-%m-%d %T&quot;` ########################################################### if [ ! -r &quot;${PASSFILE}&quot; ]; then echo &quot;${TIME_STAMP}: Could not open password file \&quot;${PASSFILE}\&quot; for reading.&quot; &gt;&gt; ${LOG_FILE} exit 1 fi CORRECT_PASSWORD=`awk &#39;!/^;/&amp;&amp;!/^#/&amp;&amp;$1==&quot;&#39;${username}&#39;&quot;{print $2;exit}&#39; ${PASSFILE}` if [ &quot;${CORRECT_PASSWORD}&quot; = &quot;&quot; ]; then echo &quot;${TIME_STAMP}: User does not exist: username=\&quot;${username}\&quot;, password=\&quot;${password}\&quot;.&quot; &gt;&gt; ${LOG_FILE} exit 1 fi if [ &quot;${password}&quot; = &quot;${CORRECT_PASSWORD}&quot; ]; then echo &quot;${TIME_STAMP}: Successful authentication: username=\&quot;${username}\&quot;.&quot; &gt;&gt; ${LOG_FILE} exit 0 fi echo &quot;${TIME_STAMP}: Incorrect password: username=\&quot;${username}\&quot;, password=\&quot;${password}\&quot;.&quot; &gt;&gt; ${LOG_FILE} exit 1创建保存账户密码的文件： psw-file [root@test easy-rsa]#vi psw-file book 123456 //账户+空格+密码格式保存 4.3 注销用户客户端如果同事离职了，需要注销证书 [root@test easy-rsa]# ./revoke-full book //注销用户book 这个时候还是可以利用此证书登录服务器的，在server.conf下增加一行 crl-verify /usr/local/openvpn/easy-rsa/keys/crl.pem 再重启下openvpn服务即可 4.4 启动openvpn[root@test~]# /usr/local/openvpn/sbin/openvpn --config /usr/local/openvpn/conf/server.conf &amp; [root@test~]#ps –ef |grep openvpn root 1013 1 0 Apr13 ? 00:00:04 /usr/local/openvpn/sbin/openvpn --config /usr/local/openvpn/conf/server.conf [root@test~]# netstat -ntlup //由此可见端口已在监听 Udp 0 0 172.xx.xx.xx:2294 0.0.0.0:* 1013/openvpn 五、配置防火墙5.1 开启路由转发[root@test ~]# vim /etc/sysctl.conf net.ipv4.ip_forward = 1 #将值改为1保存 [root@test ~]# sysctl -p #执行生效 5.2 配置iptables NAT转发[root@test ~]# systemctl stop firewalld.service [root@test ~]# systemctl disable firewalld.service [root@test ~]# yum install -y iptables-services [root@test ~]# systemctl enable iptables [root@test ~]# iptables -F #清空iptables配置规则 [root@test ~]# iptables -X [root@test ~]# iptables -P OUTPUT ACCEPT [root@test ~]# iptables -P FORWARD ACCEPT [root@test ~]# iptables -A INPUT -i lo -j ACCEPT [root@test ~]# iptables -A OUTPUT -o lo -j ACCEPT [root@test ~]#iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT [root@test ~]# iptables -A INPUT -p tcp --dport 22 -j ACCEPT [root@test ~]# iptables -A INPUT -p udp --dport 2294 -j ACCEPT #对vpn网段进行转发 [root@test ~]# iptables -t nat -A POSTROUTING -o eth0 -s 20.8.8.0/24 -j MASQUERADE #把内部主机端口的流量指定到出口ip [root@test ~]# iptables -t nat -A PREROUTING -s 100.100.100.100 -p udp -m udp --dport 2294 -j DNAT --to-destination 172.xx.xx.xx:2294 [root@test ~]#service iptables save [root@test ~]#service iptables restart 六、客户端配置文件 打开client.ovpn配置文件 Client dev tun proto udp remote 100.100.100.100 2294 resolv-retry infinite nobind persist-key persist-tun ca ca.crt cert book.crt #这里是指定用户证书，名字要和拷贝过来的文件一致 key book.key ns-cert-type server comp-lzo verb 3 tls-auth ta.key 1 #这里客户端为1 auth-user-pass #这里要加上，用户密码验证]]></content>
      <categories>
        <category>linux 运维</category>
      </categories>
      <tags>
        <tag>linux 运维</tag>
      </tags>
  </entry>
</search>
