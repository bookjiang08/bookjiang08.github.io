<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Tengine配置防百度爬虫</title>
      <link href="/2019/09/03/Anti-reptile/"/>
      <url>/2019/09/03/Anti-reptile/</url>
      
        <content type="html"><![CDATA[<ul><li>发现此xxx.xxxx.cn一直被下面这个ua爬取:<pre><code>Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)</code></pre></li><li>tengine配置if判断ua，挡掉这个爬虫</li></ul><br><a id="more"></a><h2 id="1-配置conf"><a href="#1-配置conf" class="headerlink" title="1.配置conf"></a>1.配置conf</h2><pre><code>vim xxx.xxxx.cn #添加以下配置 if ($http_user_agent ~ &quot;Mozilla/5.0\ \(compatible;\ Baiduspider/2.0;\ \+http://www.baidu.com/search/spider.html&quot;)        {        return 403;        } if ($http_user_agent ~* ^Baiduspider)         {        return 403;        }</code></pre><br><h2 id="2-测试nginx-t-和-nginx-s-reload"><a href="#2-测试nginx-t-和-nginx-s-reload" class="headerlink" title="2.测试nginx  -t 和 nginx -s  reload"></a>2.测试<code>nginx  -t</code> 和 <code>nginx -s  reload</code></h2><br><h2 id="3-额外补充方法："><a href="#3-额外补充方法：" class="headerlink" title="3.额外补充方法："></a>3.额外补充方法：</h2><h3 id="3-1-新建user-agent-deny-conf配置文件"><a href="#3-1-新建user-agent-deny-conf配置文件" class="headerlink" title="3.1 新建user-agent_deny.conf配置文件"></a>3.1 新建<code>user-agent_deny.conf</code>配置文件</h3><pre><code>#禁止Scrapy等工具的抓取if ($http_user_agent ~* (Scrapy|Curl|HttpClient)) {    return 403;}#禁止指定UA及UA为空的访问if ($http_user_agent ~* &quot;FeedDemon|Indy Library|YandexBot|Alexa Toolbar|AskTbFXTV|AhrefsBot|CrawlDaddy|CoolpadWebkit|Java|Feedly|UniversalFeedParser|ApacheBench|Microsoft URL Control|Swiftbot|ZmEu|oBot|jaunty|Python-urllib|lightDeckReports Bot|YYSpider|DigExt|HttpClient|MJ12bot|heritrix|EasouSpider|Ezooms|^$&quot; ) {    return 403;}#禁止非GET|HEAD|POST方式的抓取if ($request_method !~ ^(GET|HEAD|POST)$) {    return 403;}#然后直接reload即可</code></pre><br><h3 id="3-2-添加default-server"><a href="#3-2-添加default-server" class="headerlink" title="3.2 添加default_server;"></a>3.2 添加default_server;</h3><pre><code> server {            listen       81  default_server;            server_name  _;            return       403;        }</code></pre><ul><li>default_server：nginx的虚拟主机是通过HTTP请求中的Host值来找到对应的虚拟主机配置</li><li>对于未绑定的域名指向你的服务器时，匹配不到你配置的虚拟主机域名后，会默认使用这个虚拟主机，然后直接返回403（状态码，可以自己定义，且返回内容可以通过error_page、echo或是lua等等）<br></li></ul>]]></content>
      
      
      <categories>
          
          <category> tengine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tengine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Read me</title>
      <link href="/2019/09/02/README/"/>
      <url>/2019/09/02/README/</url>
      
        <content type="html"><![CDATA[<h1 id="LB相关文档及操作"><a href="#LB相关文档及操作" class="headerlink" title="LB相关文档及操作"></a>LB相关文档及操作</h1><a id="more"></a><br><ul><li>禅道申请LB域名配置模板地址：<pre><code>https://chandao.tuhu.work/index.php?m=task&amp;f=create&amp;project=630&amp;storyID=17205&amp;moduleID=4131</code></pre><br></li></ul>]]></content>
      
      
      <categories>
          
          <category> book </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>思科三层交换机配置</title>
      <link href="/2019/05/22/test/"/>
      <url>/2019/05/22/test/</url>
      
        <content type="html"><![CDATA[<p>##</p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Openvpn服务器搭建</title>
      <link href="/2019/05/20/Openvpnserver/"/>
      <url>/2019/05/20/Openvpnserver/</url>
      
        <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><pre><code>OpenVPN 是一个基于 OpenSSL 库的应用层 VPN 实现，和传统 VPN 相比，它的优点是简单易用、安全稳定。此次基于centos7.3系统编译安装，使用udp协议自定义端口，搭建的目的是为了能实现通过证书+账户密码双重认证的方法，登录到阿里云VPC内部，对服务器进行配置管理。</code></pre><br><a id="more"></a><ul><li>准备工具</li></ul><pre><code>Easy-rsa.zip  //秘钥制作工具Lzo-2.0.6.tar.gz  //依赖包Openvpn-2.3.3.tar.gz  //安装包 </code></pre><ul><li>网段</li></ul><pre><code>openvpn主机ip : 172.xx.xx.xx外网ip: 100.100.100.100vpn网段：20.8.8.0</code></pre><br><h3 id="二、安装Openvpn"><a href="#二、安装Openvpn" class="headerlink" title="二、安装Openvpn"></a>二、安装Openvpn</h3><h4 id="2-1-安装依赖包"><a href="#2-1-安装依赖包" class="headerlink" title="2.1 安装依赖包"></a>2.1 安装依赖包</h4><p><code>pam-devel是安装openvpn必要的依赖包</code></p><pre><code>[root@test ~]# yum  -y  install  unzip ntpdate  pam-devel  openssl  openssl-devel</code></pre><br><h4 id="2-2-上传包文件"><a href="#2-2-上传包文件" class="headerlink" title="2.2 上传包文件"></a>2.2 上传包文件</h4><pre><code>通过ssh连接上openvpn服务器，把3个文件拷贝到/usr/local/目录下，并分别解压[root@test local]# unzip  easy-rsa.zip           #asy-rsa证书制作工具[root@test local]# tar  -zxvf   lzo-2.06.tar.gz    #lzo-2.0.6.tar.gz依赖包[root@test local]# tar  -zxvf   openvpn-2.3.3.tar.gz  </code></pre><br><h4 id="2-3-创建安装目录"><a href="#2-3-创建安装目录" class="headerlink" title="2.3 创建安装目录"></a>2.3 创建安装目录</h4><pre><code>[root@test local]# mkdir  -p  /usr/local/openvpn/conf   #于存放配置文件[root@test local]# mkdir  –p  /usr/local/openvpn/log    #于存放日志文件[root@test local]# mkdir  -p  /usr/local/openvpn/easy-rsa  #密钥生成工具及密钥</code></pre><br><h4 id="2-4-开始安装openvpn"><a href="#2-4-开始安装openvpn" class="headerlink" title="2.4 开始安装openvpn"></a>2.4 开始安装openvpn</h4><p><code>进入/usr/local/目录下:</code></p><pre><code>[root@test local]# cd   lzo-2.06[root@test lzo-2.06]# ./configure --prefix=/usr   #装依赖库[root@test lzo-2.06]#make  &amp;&amp;  make  install[root@test lzo-2.06]#  /sbin/ldconfig         #置运行时动态链接库[root@test local]# cd  openvpn-2.3.3[root@test openvpn-2.3.3]# ./configure --prefix=/usr/local/openvpn/[root@test openvpn-2.3.3]# make  &amp;&amp;  make  install[root@testopenvpn-2.3.3]#cd  sample/sample-config-files/[root@test sample-config-files]# cp server.conf  /usr/local/openvpn/conf/ #贝配置文件[root@test local]# cd  easy-rsa/2.0/[root@test 2.0]# cp  -rf  *  /usr/local/openvpn/easy-rsa/[root@test 2.0]# cd  /usr/local/openvpn/easy-rsa/[root@test easy-rsa]# chmod  +x  *  </code></pre><br><h3 id="三、配置openvpn"><a href="#三、配置openvpn" class="headerlink" title="三、配置openvpn"></a>三、配置openvpn</h3><h4 id="3-1-配置Vars文件及生成服务端证书"><a href="#3-1-配置Vars文件及生成服务端证书" class="headerlink" title="3.1 配置Vars文件及生成服务端证书"></a>3.1 配置Vars文件及生成服务端证书</h4><pre><code>[root@test ~]# cd  /usr/local/openvpn/easy-rsa/[root@test easy-rsa]# vim   vars    #配置vars文件（证书的默认配置）export KEY_SIZE=2048                   #加密位数，太大增加CPU负载export CA_EXPIRE=3650                  #证书有效期，这里是10年export KEY_EXPIRE=365                  #秘钥有效期export KEY_COUNTRY=&quot;CN&quot;              #国家export KEY_PROVINCE=&quot;SH&quot;              #省份export KEY_CITY=&quot;Shanghai&quot;             #所在城市export KEY_ORG=&quot;yunwei&quot;                # 组织单位export KEY_EMAIL=&quot;yunwei@book.cn&quot;    #邮箱地址export KEY_OU=&quot;Yunwei&quot;                #组织容器可以随便填写export KEY_NAME=&quot;VPNServer&quot;          #名称可以随便填写[root@test easy-rsa]# source  vars         #使配置生效下面开始制作根证书CA:[root@test easy-rsa]# ./clean-all           #初始化[root@test easy-rsa]# ./build-ca           #创建根证书，一路回车Generating a 2048 bit RSA private key..................................+++...............................+++writing new private key to &#39;ca.key&#39;-----You are about to be asked to enter information that will be incorporatedinto your certificate request.What you are about to enter is what is called a Distinguished Name or a DN.There are quite a few fields but you can leave some blankFor some fields there will be a default value,If you enter &#39;.&#39;, the field will be left blank.-----Country Name (2 letter code) [CN]:  State or Province Name (full name) [SH]: Locality Name (eg, city) [Shanghai]: Organization Name (eg, company) [yunwei]: Organizational Unit Name (eg, section) [Yunwei]: Common Name (eg, your name or your server&#39;s hostname) [yunwei CA]: Name [EasyServer]: Email Address [yunwei@book.cn]: 创建服务器端证书server和秘钥:[root@test easy-rsa]# ./build-key-server server   #一路回车默认，最后输入y确认Generating a 2048 bit RSA private key...........+++....+++writing new private key to &#39;server.key&#39;-----You are about to be asked to enter information that will be incorporatedinto your certificate request.What you are about to enter is what is called a Distinguished Name or a DN.There are quite a few fields but you can leave some blankFor some fields there will be a default value,If you enter &#39;.&#39;, the field will be left blank.-----Country Name (2 letter code) [CN]:State or Province Name (full name) [SH]:Locality Name (eg, city) [Shanghai]:Organization Name (eg, company) [yunwei]:Organizational Unit Name (eg, section) [Yunwei]:Common Name (eg, your name or your server&#39;s hostname) [server]:Name [EasyServer]:Email Address [yunwei@book.cn]:Please enter the following &#39;extra&#39; attributesto be sent with your certificate requestA challenge password []:An optional company name []:Using configuration from /usr/local/openvpn/easy-rsa/openssl-1.0.0.cnfCheck that the request matches the signatureSignature okThe Subject&#39;s Distinguished Name is as followscountryName           :PRINTABLE:&#39;CN&#39;stateOrProvinceName   :PRINTABLE:&#39;SH&#39;localityName          :PRINTABLE:&#39;Shanghai&#39;organizationName      :PRINTABLE:&#39;yunwei&#39;organizationalUnitName:PRINTABLE:&#39;Yunwei&#39;commonName            :PRINTABLE:&#39;server&#39;name                  :PRINTABLE:&#39;EasyServer&#39;emailAddress          :IA5STRING:&#39;yunwei@book.cn&#39;Certificate is to be certified until Apr 15 15:35:32 2019 GMT (365 days)Sign the certificate? [y/n]:y         #输入y1 out of 1 certificate requests certified, commit? [y/n] y   #输入yWrite out database with 1 new entries[root@test easy-rsa]# ./build-dh  #创建dh2048加密协商文件[root@test easy-rsa]# [root@testeasy-rsa]#../sbin/openvpn  --genkey  --secret /usr/local/openvpn/easy-rsa/keys/ta.key   #生成防Dos攻击的文件</code></pre><br><h4 id="3-2-配置openvpn-server文件"><a href="#3-2-配置openvpn-server文件" class="headerlink" title="3.2 配置openvpn server文件"></a>3.2 配置openvpn server文件</h4><pre><code>[root@test ~]# vim  /usr/local/openvpn/conf/server.confLocal  172.xx.xx.xx    #本机监听地址port  2294           #自定义端口号proto udp            #使用udp协议dev tun              #tun是ip层的点对点协议,建议使用tun#证书若没放在conf下，需要指定路径ca  /usr/local/openvpn/easy-rsa/keys/ca.crt cert  /usr/local/openvpn/easy-rsa/keys/server.crtkey /usr/local/openvpn/easy-rsa/keys/server.key  # This file should be kept secretdh  /usr/local/openvpn/easy-rsa/keys/dh2048.pemserver  20.8.8.0 255.255.255.0    #服务器vpn网段地址#防止openvpn重新启动后“忘记”Client曾经使用过的IP地址ifconfig-pool-persist /usr/local/openvpn/log/ipp.txt #通过VPN Server往Client push路由，client通过pull指令获得 push &quot;route 20.8.8.0  255.255.255.0&quot;push &quot;route 172.xx.xx.0 255.255.255.0&quot;push &quot;dhcp-option DNS 223.5.5.5&quot;    #指定DNS地址push &quot;dhcp-option DNS 8.8.8.8&quot;client-to-client#和keys连接VPN，一定要打开这个选项，否则只允许一个人连接VPNduplicate-cnkeepalive 10 120         comp-lzo          #对数据进行压缩max-clients 10      #支持客户端数通过keepalive检测超时后，重新启动VPN，不重新读取keys，保留第一次使用的keyspersist-key#通过keepalive检测超时后，重新启动VPN，一直保持tun或者tap设备是linkup的，否则网络连接会先linkdown然后linkuppersist-tun   status  /usr/local/openvpn/log/openvpn-status.log  #日志路径log-append  /usr/local/openvpn/log/openvpn.logverb 3</code></pre><br><h3 id="四、用户密码-证书验证配置"><a href="#四、用户密码-证书验证配置" class="headerlink" title="四、用户密码+证书验证配置"></a>四、用户密码+证书验证配置</h3><h4 id="4-1-创建客户端用户"><a href="#4-1-创建客户端用户" class="headerlink" title="4.1 创建客户端用户"></a>4.1 创建客户端用户</h4><pre><code>[root@test ~]# cd  /usr/local/openvpn/easy-rsa/[root@test easy-rsa]# ./build-key  book   #创建用户book，方法同server端</code></pre><pre><code>备注：执行后会在keys文件夹下，生成3个文件，book.crt、book.csr（mac电脑不需要这个文件）、book.key，另外加上同目录下的ca.crt、ca.key、ta.key和dh2048.pem这7个文件一起打包，即是客户端所需要的所有文件，添加其它用户也是同样的方法</code></pre><br><h4 id="4-2-配置账户密码验证"><a href="#4-2-配置账户密码验证" class="headerlink" title="4.2 配置账户密码验证"></a>4.2 配置账户密码验证</h4><pre><code>[root@test ~]# vi /usr/local/openvpn/conf/server.conf  #配置文件中加上以下几行tls-auth  /usr/local/openvpn/easy-rsa/keys/ta.key 0  #server端是0 ,客户端为1auth-user-pass-verify   /usr/local/openvpn/easy-rsa/checkpsw.sh  via-env #密码验证的脚本文件放在此目录下，稍后创建脚本script-security 3username-as-common-name ;client-cert-not-required  #如果只想账户密码验证，就开启这句</code></pre><pre><code>创建脚本文件：checkpsw.sh#!/bin/sh############################################################ checkpsw.sh (C) 2004 Mathias Sundman &lt;mathias@openvpn.se&gt;## This script will authenticate OpenVPN users against# a plain text file. The passfile should simply contain# one row per user with the username first followed by# one or more space(s) or tab(s) and then the password.PASSFILE=&quot;/usr/local/openvpn/easy-rsa/psw-file&quot; //指定保存账户和密码的文件LOG_FILE=&quot;/usr/local/openvpn/log/openvpn-password.log&quot;//保存日志文件TIME_STAMP=`date &quot;+%Y-%m-%d %T&quot;`###########################################################if [ ! -r &quot;${PASSFILE}&quot; ]; thenecho &quot;${TIME_STAMP}: Could not open password file \&quot;${PASSFILE}\&quot; for reading.&quot; &gt;&gt; ${LOG_FILE}exit 1fiCORRECT_PASSWORD=`awk &#39;!/^;/&amp;&amp;!/^#/&amp;&amp;$1==&quot;&#39;${username}&#39;&quot;{print $2;exit}&#39; ${PASSFILE}`if [ &quot;${CORRECT_PASSWORD}&quot; = &quot;&quot; ]; thenecho &quot;${TIME_STAMP}: User does not exist: username=\&quot;${username}\&quot;, password=\&quot;${password}\&quot;.&quot; &gt;&gt; ${LOG_FILE}exit 1fiif [ &quot;${password}&quot; = &quot;${CORRECT_PASSWORD}&quot; ]; thenecho &quot;${TIME_STAMP}: Successful authentication: username=\&quot;${username}\&quot;.&quot; &gt;&gt; ${LOG_FILE}exit 0fiecho &quot;${TIME_STAMP}: Incorrect password: username=\&quot;${username}\&quot;, password=\&quot;${password}\&quot;.&quot; &gt;&gt; ${LOG_FILE}exit 1</code></pre><pre><code>创建保存账户密码的文件： psw-file[root@test easy-rsa]#vi  psw-filebook    123456  //账户+空格+密码格式保存</code></pre><br><h4 id="4-3-注销用户客户端"><a href="#4-3-注销用户客户端" class="headerlink" title="4.3  注销用户客户端"></a>4.3  注销用户客户端</h4><p><code>如果同事离职了，需要注销证书</code></p><pre><code>[root@test easy-rsa]# ./revoke-full book   //注销用户book这个时候还是可以利用此证书登录服务器的，在server.conf下增加一行crl-verify  /usr/local/openvpn/easy-rsa/keys/crl.pem再重启下openvpn服务即可</code></pre><br><h4 id="4-4-启动openvpn"><a href="#4-4-启动openvpn" class="headerlink" title="4.4  启动openvpn"></a>4.4  启动openvpn</h4><pre><code>[root@test~]# /usr/local/openvpn/sbin/openvpn   --config  /usr/local/openvpn/conf/server.conf   &amp;[root@test~]#ps –ef |grep openvpnroot      1013     1  0 Apr13 ?   00:00:04 /usr/local/openvpn/sbin/openvpn --config /usr/local/openvpn/conf/server.conf  [root@test~]# netstat  -ntlup  //由此可见端口已在监听Udp 0 0 172.xx.xx.xx:2294    0.0.0.0:*        1013/openvpn</code></pre><br><h3 id="五、配置防火墙"><a href="#五、配置防火墙" class="headerlink" title="五、配置防火墙"></a>五、配置防火墙</h3><h4 id="5-1-开启路由转发"><a href="#5-1-开启路由转发" class="headerlink" title="5.1  开启路由转发"></a>5.1  开启路由转发</h4><pre><code>[root@test ~]# vim /etc/sysctl.confnet.ipv4.ip_forward = 1  #将值改为1保存[root@test ~]# sysctl   -p  #执行生效</code></pre><br><h4 id="5-2-配置iptables-NAT转发"><a href="#5-2-配置iptables-NAT转发" class="headerlink" title="5.2  配置iptables NAT转发"></a>5.2  配置iptables NAT转发</h4><pre><code>[root@test ~]# systemctl  stop  firewalld.service[root@test ~]# systemctl  disable  firewalld.service[root@test ~]# yum install -y iptables-services[root@test ~]# systemctl enable iptables[root@test ~]# iptables  -F   #清空iptables配置规则[root@test ~]# iptables  -X[root@test ~]# iptables  -P OUTPUT  ACCEPT [root@test ~]# iptables  -P  FORWARD  ACCEPT[root@test ~]# iptables  -A INPUT  -i  lo  -j  ACCEPT [root@test ~]# iptables  -A OUTPUT  -o  lo  -j  ACCEPT[root@test ~]#iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT[root@test ~]# iptables -A INPUT -p tcp --dport 22 -j ACCEPT[root@test ~]# iptables -A INPUT -p udp --dport 2294 -j ACCEPT #对vpn网段进行转发[root@test ~]# iptables -t nat -A POSTROUTING -o eth0 -s 20.8.8.0/24 -j MASQUERADE#把内部主机端口的流量指定到出口ip[root@test ~]# iptables -t nat  -A PREROUTING -s 100.100.100.100 -p udp -m udp --dport 2294 -j DNAT --to-destination 172.xx.xx.xx:2294  [root@test ~]#service  iptables  save[root@test ~]#service  iptables  restart</code></pre><br><h3 id="六、客户端配置文件"><a href="#六、客户端配置文件" class="headerlink" title="六、客户端配置文件"></a>六、客户端配置文件</h3><ul><li>打开client.ovpn配置文件</li></ul><pre><code>Clientdev tunproto udpremote 100.100.100.100  2294resolv-retry infinitenobindpersist-keypersist-tunca ca.crtcert  book.crt  #这里是指定用户证书，名字要和拷贝过来的文件一致key   book.keyns-cert-type servercomp-lzoverb 3tls-auth ta.key 1   #这里客户端为1auth-user-pass  #这里要加上，用户密码验证</code></pre><br>]]></content>
      
      
      <categories>
          
          <category> linux 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux 运维 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
